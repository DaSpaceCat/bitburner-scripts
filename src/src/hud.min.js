import{hudHelper,globalHelper,formulaHelper,hashnetHelper}from"./helpers.js";import{ProgressBar,FiraBar}from"./glyph.js";let sf5=!0,sfs=[{n:1,lvl:2},{n:2,lvl:1},{n:3,lvl:1},{n:4,lvl:0},{n:5,lvl:1},{n:6,lvl:0},{n:7,lvl:1},{n:8,lvl:0},{n:9,lvl:1},{n:10,lvl:1},{n:11,lvl:0},{n:12,lvl:0},{n:13,lvl:0},],col={money:"#F9E2AF",def:"#FFFFFF",hak:"#A6E3A1",sta:"#A6ADC8",cha:"#CBA6F7",int:"#89B4FA",hp:"#F38BA8"},gMinPID;export async function main(ns){ns.disableLog("ALL");let srvs=ns.args,hoverOvvCont=!1,doc=eval("document"),hook0=doc.getElementById("overview-extra-hook-0"),hook1=doc.getElementById("overview-extra-hook-1"),ovv=doc.getElementsByClassName("MuiPaper-root")[0],ovvCont=ovv.childNodes[1].firstChild.firstChild.firstChild,doneEL=!1;ovv.style.borderRadius="0px 0px 10px 10px",ovv.style.backgroundColor="#181825",ovv.style.backdropFilter="blur(1px)",ovv.style.borderWidth="2px",ovv.style.margin="0px",ovv.style.boxShadow="5px 5px 10px rgba(0,0,0,0.5)",ovv.style.zIndex="99999999",ovv.style.transiton="all .2s",ovvCont.addEventListener("mouseover",e=>{ovvCont.style.maxHeight="600px",hoverOvvCont=!0}),ovvCont.addEventListener("mouseout",e=>{ovvCont.style.maxHeight="400px",hoverOvvCont=!1}),ovvCont.style.transition="all .2s",hoverOvvCont||(ovvCont.style.maxHeight="400px"),ovvCont.style.overflow="scroll";for(let i=0;i<17;i++)ovvCont.firstChild.childNodes[i].style.display="none";let gVars="let bna = 0; let x = 0; let y = 0; let lvlMin = false;let crmMin = false;let monMin = false;let sklMin = false;let slvMin = true;let gngMin = false;let crpMin = false;let bldMin = false;let srvMin = false;let pltMin = false;let runMin = false;let mscMin = false;let bvsMin = false;let cusMin = false;let nsgRun = null;let toRun;let scriptContent = false;let scriptContentV0, scriptContentV1;let sleeveDo = {action: undefined, task: undefined};",sty=`.scrRun:hover {background-color: ${col.hak}; color: ${col.def}} .ovvMin:hover {color: ${col.hak}} ${hudHelper.tooltip.style}`;globalHelper.createGlobalStyle("hudSty",sty),globalHelper.createGlobalScript("hudMins",gVars);let buttonCSS="transition: all 0.2s; display: inline; width: 90%; background-color: rgba(0,0,0,0); cursor: pointer;";hudHelper.bitverse(hook0,hook1,col.hak,sfs),hudHelper.tooltip.setElementTooltip("bn1",hudHelper.tooltip.createBNObject(sfs[0],"Source Genesis","The original BitNode"),doneEL),hudHelper.tooltip.setElementTooltip("bn2",hudHelper.tooltip.createBNObject(sfs[1],"Rise of the Underworld","From the shadows, they rose"),doneEL),hudHelper.tooltip.setElementTooltip("bn3",hudHelper.tooltip.createBNObject(sfs[2],"Corporatocracy","The Price of Civilization"),doneEL),hudHelper.tooltip.setElementTooltip("bn4",hudHelper.tooltip.createBNObject(sfs[3],"The Singularity","The Man and the Machine"),doneEL),hudHelper.tooltip.setElementTooltip("bn5",hudHelper.tooltip.createBNObject(sfs[4],"Artificial Intelligence","Posthuman"),doneEL),hudHelper.tooltip.setElementTooltip("bn6",hudHelper.tooltip.createBNObject(sfs[5],"Bladeburners","Like Tears in Rain"),doneEL),hudHelper.tooltip.setElementTooltip("bn7",hudHelper.tooltip.createBNObject(sfs[6],"Bladeburners 2079","More human than humans"),doneEL),hudHelper.tooltip.setElementTooltip("bn8",hudHelper.tooltip.createBNObject(sfs[7],"Ghost of Wall Street","Money never sleeps"),doneEL),hudHelper.tooltip.setElementTooltip("bn9",hudHelper.tooltip.createBNObject(sfs[8],"Hacktocracy","Hacknet Unleashed"),doneEL),hudHelper.tooltip.setElementTooltip("bn10",hudHelper.tooltip.createBNObject(sfs[9],"Digital Carbon","Your body is not who you are"),doneEL),hudHelper.tooltip.setElementTooltip("bn11",hudHelper.tooltip.createBNObject(sfs[10],"The Big Crash","Okay. Sell it all."),doneEL),hudHelper.tooltip.setElementTooltip("bn12",hudHelper.tooltip.createBNObject(sfs[11],"The Recursion","Repeat.",!0),doneEL),hudHelper.tooltip.setElementTooltip("bn13",hudHelper.tooltip.createBNObject(sfs[12],"They're lunatics","1 step back, 2 steps forward"),doneEL);let curTool=doc.getElementById(`bn${ns.getPlayer().bitNodeN}-tooltip`);curTool.innerHTML+=`<br><span style="color: ${col.hak};">You are in this BitNode.</span>`,gMinPID=ns.run("/src/nsg.js");let style=doc.createElement("style"),css=".bnSpan {color: red;font-weight: bold;transition: all 0.2s;} .bnSpan1 {color: yellow;font-weight: bold;transition: all 0.2s;} .bnSpan2 {color: #48D1CC;font-weight: bold;transition: all 0.2s;} .bnSpan3 {color: blue;font-weight: bold;transition: all 0.2s;} .bnSpan:hover, .bnSpan1:hover, .bnSpan2:hover, .bnSpan3:hover {color: #FFFFFF;cursor: pointer;} .ovvCont {margin: 0px;font-family: 'FiraCode Nerd Font Mono', 'FiraCode NF Regular', 'Lucida Sans Unicode', monospace;font-weight: 400;font-size: 1rem;line-height: 0;}";Object.assign(style,{id:"glob-css"}),style.type="text/css",style.innerHTML=css,doc.head.appendChild(style),ns.atExit(()=>{doc.getElementById("glob-css").remove(),doc.getElementById("hudSty").remove(),doc.getElementById("hudMins").remove(),doc.getElementById("bitverseL").remove(),doc.getElementById("bitverseR").remove();let e=doc.getElementsByClassName("tooltiptext");for(let t=0;t<e.length;t++){let l=e[t];l.remove()}doc.removeEventListener("mousemove",hudHelper.tooltip.updatePos,!1),hook1.innerHTML="",hook0.innerHTML="",ovv.style.borderRadius="",ovv.style.backgroundColor="",ovv.style.backdropFilter="",ovv.style.borderWidth="",ovv.style.margin="",ovv.style.boxShadow="",ovv.style.zIndex="",ovv.style.transiton="";for(let o=0;o<17;o++)ovvCont.firstChild.childNodes[o].style.display=""});let hed=[],val=[];hudHelper.startHud(hed,val),hudHelper.pushCont(hed,val,"Location: ",col.def,"loc"),hudHelper.pushCont(hed,val,"Health: ",col.hp,"hp"),hudHelper.pushBreak(hed,val,"LEVELS","────────────────",lvlMin,"lvlMin","levels"),hudHelper.startSec(hed,val,"levels","inline"),hudHelper.pushCont(hed,val,"Hacking: ",col.hak,"skHak"),hudHelper.pushCont(hed,val,"Str | Def: ",col.sta,"skStrDef"),hudHelper.pushCont(hed,val,"Dex | Agi: ",col.sta,"skDexAgi"),hudHelper.pushCont(hed,val,"Charisma: ",col.cha,"skCha"),hudHelper.pushCont(hed,val,"Intelligence: ",col.int,"skInt"),hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"SKILL EXPERIENCE","───────────",sklMin,"sklMin","skill"),hudHelper.startSec(hed,val,"skill","inline"),hudHelper.pushCont(hed,val,"Hacking: ",col.hak,"xpHak"),hudHelper.pushCont(hed,val,"Str | Def: ",col.sta,"xpStrDef"),hudHelper.pushCont(hed,val,"Dex | Agi: ",col.sta,"xpDexAgi"),hudHelper.pushCont(hed,val,"Charisma: ",col.cha,"xpCha"),hudHelper.pushCont(hed,val,"Intelligence: ",col.int,"xpInt"),hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"CRIMES","────────────────",crmMin,"crmMin","crime"),hudHelper.startSec(hed,val,"crime","inline"),hudHelper.pushCont(hed,val,"Karma: ",col.hp,"karma"),hudHelper.pushCont(hed,val,"People Killed: ",col.hp,"kills"),hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"MONEY & PROFIT","────────────",monMin,"monMin","money"),hudHelper.startSec(hed,val,"money","inline"),hudHelper.pushCont(hed,val,"Money: ",col.money,"money"),hudHelper.pushCont(hed,val,"Gang Income: ",col.money,"gangIncome"),hudHelper.pushCont(hed,val,"Hack Income: ",col.money,"hackIncome"),hudHelper.startSubsec(hed,val,"HASHNET","─────────────────"),hudHelper.pushContSub(hed,val,"Hashes: ",col.money,"hashes"),hudHelper.pushContSub(hed,val,"Nodes: ",col.hak,"nodes"),hudHelper.pushContSub(hed,val,'"Money"',col.money,"hashMoney"),hudHelper.pushContSub(hed,val,"Corp Fund",col.money,"hashCorp"),hudHelper.pushContSub(hed,val,"Hash Gain",col.hak,"hashGain"),hudHelper.pushContSub(hed,val,'"Money" Gain',col.money,"hashMoneyGain"),hudHelper.pushContSub(hed,val,"Corp FGain",col.money,"hashCorpGain"),hudHelper.pushContSub(hed,val,"Exchange: ",col.money,"hashExchangeMoney"),hudHelper.pushContSub(hed,val,"Exchange: ",col.money,"hashExchangeCorp"),hudHelper.endSubsec(hed,val),hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"SLEEVE","────────────────",slvMin,"slvMin","sleeve"),hudHelper.startSec(hed,val,"sleeve","hidden");for(let i=0;i<ns.sleeve.getNumSleeves();i++)hudHelper.pushCont(hed,val,`Sleeve ${i}:`,col.int,`sleeve${i}`),hudHelper.pushCont(hed,val,` <span style="color: ${col.def};">│</span> Action: `,col.hak,`sleeve${i}Act`),hudHelper.pushCont(hed,val,` <span style="color: ${col.def};">│</span> Health: `,col.hp,`sleeve${i}Hp`),hudHelper.pushCont(hed,val,` <span style="color: ${col.def};">│</span> Hack: `,col.hak,`sleeve${i}Hak`),hudHelper.pushCont(hed,val,` <span style="color: ${col.def};">│</span> Str/Def: `,col.sta,`sleeve${i}StrDef`),hudHelper.pushCont(hed,val,` <span style="color: ${col.def};">│</span> Dex/Agi: `,col.sta,`sleeve${i}DexAgi`),hudHelper.pushCont(hed,val,` <span style="color: ${col.def};">│</span> Cha: `,col.cha,`sleeve${i}Cha`),hudHelper.pushCont(hed,val,` ╰─────────────`,col.def,`sleeve${i}End`);hudHelper.pushCont(hed,val,"quikMurder:",col.hp,"slvHom"),hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"SERVER","────────────────",srvMin,"srvMin","server"),hudHelper.startSec(hed,val,"server","inline"),hudHelper.pushCont(hed,val,"Home: ",col.hak,"srvHome");for(let i=0;i<=srvs.length-1;i++){let dspSrv=srvs[i].replace("hacknet-node","HKN");hudHelper.pushCont(hed,val,dspSrv,col.hak,`srv${i}`)}hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"PLAYTIME","───────────────",pltMin,"pltMin","playt"),hudHelper.startSec(hed,val,"playt","inline"),hudHelper.pushCont(hed,val,`BN${ns.getPlayer().bitNodeN}: `,col.time,"playTimeBN"),hudHelper.pushCont(hed,val,"Total: ",col.time,"playTimeTotal"),hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"SCRIPT RUNNERS","────────────",runMin,"runMin","srcr"),hudHelper.startSec(hed,val,"srcr","inline"),hudHelper.pushCont(hed,val,"Breach: ",col.hak,"runBreach"),hudHelper.pushCont(hed,val,"Matrix: ",col.hak,"runMatrix"),hudHelper.pushCont(hed,val,"Map: ",col.hak,"runMap"),hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"MISC","─────────────────",mscMin,"mscMin","misc"),hudHelper.startSec(hed,val,"misc","inline"),hudHelper.pushCont(hed,val,"Daedalus Req:",col.hak,"daedalusReqHak"),hudHelper.pushCont(hed,val," │ ",col.sta,"daedalusReqStr"),hudHelper.pushCont(hed,val," │ ",col.sta,"daedalusReqDef"),hudHelper.pushCont(hed,val," │ ",col.sta,"daedalusReqDex"),hudHelper.pushCont(hed,val," │ ",col.sta,"daedalusReqAgi"),hudHelper.pushCont(hed,val,` ╰─────────────`,col.def,"daedalusReqEnd"),hudHelper.pushCont(hed,val,"w0r1d_d43m0n",col.hak,"worldDaemonRq"),hudHelper.endSec(hed,val),hudHelper.pushBreak(hed,val,"BITVERSE","───────────────",bvsMin,"bvsMin","bitverse"),hook0.innerHTML=hed.join(" \n"),hook1.innerHTML=val.join("\n"),hudHelper.updateVal("hashExchangeMoney",`<span class="scrRun" style="${buttonCSS}" onclick="toRun = ['/src/getHashMoney.js', false]">Exchange hashes for money</button>`),hudHelper.updateVal("hashExchangeCorp",`<span class="scrRun" style="${buttonCSS}" onclick="toRun = ['/src/getHashCorp.js', false]">Exchange hashes for Corp funds.</button>`);for(let i=0;i<ns.sleeve.getNumSleeves();i++)hudHelper.updateVal(`sleeve${i}End`,"────────────────────────────────────────────");for(hudHelper.updateVal("slvHom",`<span class="gngRun" style="${buttonCSS}" onclick="sleeveDo.action = 'crime'; sleeveDo.task = 'Homicide';">Set every Sleeve to Homicide</button>`),hudHelper.updateVal("runBreach",`<span class="scrRun" style="${buttonCSS}" onclick="toRun = ['/breach.js', false]">Root every server you can.</button>`),hudHelper.updateVal("runMatrix",`<span class="scrRun" style="${buttonCSS}" onclick="toRun = ['/ui/matrix.js', false]">Create a Matrix background.</button>`),hudHelper.updateVal("runMap",`<span class="scrRun" style="${buttonCSS}" onclick="toRun = ['/src/mapt.js', true]">Show a map of all servers.</button>`),hudHelper.updateVal("daedalusReqEnd","────────────────────────────────────────────");;){try{let ply=ns.getPlayer(),els=[[lvlMin,"levels"],[crmMin,"crime"],[monMin,"money"],[sklMin,"skill"],[slvMin,"sleeve"],[srvMin,"server"],[pltMin,"playt"],[runMin,"srcr"],[mscMin,"misc"]];for(let i=0;i<els.length;i++){let el=els[i];if(el[0]){let es=doc.getElementsByClassName(el[1]);es[0].style.display="none",es[1].style.display="none"}else{let es=doc.getElementsByClassName(el[1]);es[0].style.display="inline",es[1].style.display="inline"}}hudHelper.updateVal("loc",`${ply.city}: ${ply.location}`),hudHelper.updateVal("hp",`${ns.nFormat(ply.hp.current,"0,0")} / ${ns.nFormat(ply.hp.max,"0,0")} | ${ns.nFormat(ply.hp.current/ply.hp.max,"0.000%")}`),hudHelper.updateVal("skHak",ns.nFormat(ply.skills.hacking,"0,0")),hudHelper.updateVal("skStrDef",`${ns.nFormat(ply.skills.strength,"0,0")} | ${ns.nFormat(ply.skills.defense,"0,0")}`),hudHelper.updateVal("skDexAgi",`${ns.nFormat(ply.skills.dexterity,"0,0")} | ${ns.nFormat(ply.skills.agility,"0,0")}`),hudHelper.updateVal("skCha",ns.nFormat(ply.skills.charisma,"0,0")),hudHelper.updateVal("skInt",ns.nFormat(ply.skills.intelligence,"0,0"));let nhLvl=ply.skills.hacking+1,nsLvl=ply.skills.strength+1,ndeLvl=ply.skills.defense+1,ndxLvl=ply.skills.dexterity+1,naLvl=ply.skills.agility+1,ncLvl=ply.skills.charisma+1,niLvl=ply.skills.intelligence+1;hudHelper.tooltip.setElementTooltip("ovv-xpHak",hudHelper.tooltip.createObject(`<b>EXP required for next level</b><br>${ns.nFormat(formulaHelper.getExpReq(ns,"hacking",nhLvl,sf5),"0,0")}`),doneEL),hudHelper.tooltip.setElementTooltip("ovv-xpStrDef",hudHelper.tooltip.createObject(`<b>EXP required for next level</b><br>${ns.nFormat(formulaHelper.getExpReq(ns,"strength",nsLvl,sf5),"0,0")} | ${ns.nFormat(formulaHelper.getExpReq(ns,"defense",ndeLvl,sf5),"0,0")}`),doneEL),hudHelper.tooltip.setElementTooltip("ovv-xpDexAgi",hudHelper.tooltip.createObject(`<b>EXP required for next level</b><br>${ns.nFormat(formulaHelper.getExpReq(ns,"dexterity",ndxLvl,sf5),"0,0")} | ${ns.nFormat(formulaHelper.getExpReq(ns,"agility",naLvl,sf5),"0,0")}`),doneEL),hudHelper.tooltip.setElementTooltip("ovv-xpCha",hudHelper.tooltip.createObject(`<b>EXP required for next level</b><br>${ns.nFormat(formulaHelper.getExpReq(ns,"charisma",ncLvl,sf5),"0,0")}`),doneEL),hudHelper.tooltip.setElementTooltip("ovv-xpInt",hudHelper.tooltip.createObject(`<b>EXP required for next level</b><br>${ns.nFormat(formulaHelper.getExpReq(ns,"intelligence",niLvl,!1),"0,0")}`),doneEL),hudHelper.updateVal("xpHak",ns.nFormat(ply.exp.hacking,"0,0")),hudHelper.updateVal("xpStrDef",`${ns.nFormat(ply.exp.strength,"0,0")} | ${ns.nFormat(ply.exp.defense,"0,0")}`),hudHelper.updateVal("xpDexAgi",`${ns.nFormat(ply.exp.dexterity,"0,0")} | ${ns.nFormat(ply.exp.agility,"0,0")}`),hudHelper.updateVal("xpCha",ns.nFormat(ply.exp.charisma,"0,0")),hudHelper.updateVal("xpInt",ns.nFormat(ply.exp.intelligence,"0,0")),hudHelper.updateVal("karma",ns.nFormat(ns.heart.break(),"0,0")),hudHelper.updateVal("kills",ns.nFormat(ply.numPeopleKilled,"0,0")),hudHelper.updateVal("money",`$${ns.nFormat(ply.money,"0,0")}`),ns.gang.inGang()?hudHelper.updateVal("gangIncome",ns.nFormat(5*ns.gang.getGangInformation().moneyGainRate,"$0,0")+" /s"):hudHelper.updateVal("gangIncome","N/A"),hudHelper.updateVal("hackIncome",ns.nFormat(ns.getTotalScriptIncome()[0],"$0,0")+" /s");let hashGain=0;for(let i=0;i<ns.hacknet.numNodes();i++)hashGain+=ns.hacknet.getNodeStats(i).production;let posCorp=hashnetHelper.canGet(ns,"Sell for Corporation Funds");hudHelper.updateVal("hashes",`${ns.nFormat(ns.hacknet.numHashes(),"0,0.000")} / ${ns.nFormat(ns.hacknet.hashCapacity(),"0,0")}`),hudHelper.updateVal("nodes",ns.nFormat(ns.hacknet.numNodes(),"0,0")),hudHelper.updateVal("hashMoney",`${ns.nFormat(1e6*Math.floor(ns.hacknet.numHashes()/4),"$0,0")} / ${ns.nFormat(ns.hacknet.hashCapacity()/4*1e6,"$0,0")}`),hudHelper.updateVal("hashCorp",ns.nFormat(1e9*posCorp,"$0,0")),hudHelper.updateVal("hashGain",ns.nFormat(hashGain,"0,0.000")+" h/s"),hudHelper.updateVal("hashMoneyGain",ns.nFormat(hashGain/4*1e6,"$0,0")),hudHelper.updateVal("hashCorpGain",ns.nFormat(hashGain/ns.hacknet.hashCost("Sell for Corporation Funds")*1e9,"$0,0"));for(let i=0;i<ns.sleeve.getNumSleeves();i++){let action=ns.sleeve.getTask(i),stat=ns.sleeve.getSleeveStats(i),hp={cur:ns.sleeve.getInformation(i).hp.current,max:ns.sleeve.getInformation(i).hp.max};if(hudHelper.updateVal(`sleeve${i}`,`Shock: ${ns.nFormat(ns.sleeve.getSleeveStats(i).shock,"0.000%")} | Sync: ${ns.nFormat(ns.sleeve.getSleeveStats(i).sync/100,"0.00%")}`),null!=action)switch(action.type){case"CRIME":hudHelper.updateVal(`sleeve${i}Act`,`Crime, ${action.crimeType}`);break;case"FACTION":hudHelper.updateVal(`sleeve${i}Act`,`Faction Work for ${action.factionName}: ${action.factionWorkType}`);break;case void 0:hudHelper.updateVal(`sleeve${i}Act`,`Bladeburner: ${action.actionType}: ${action.actionName}`)}else hudHelper.updateVal(`sleeve${i}Act`,"Idle");hudHelper.updateVal(`sleeve${i}Hp`,`${ns.nFormat(hp.cur,"0,0")} / ${ns.nFormat(hp.max,"0,0")} | ${ns.nFormat(hp.cur/hp.max,"0.00%")}`),hudHelper.updateVal(`sleeve${i}Hak`,`${ns.nFormat(stat.hacking,"0,0")}`),hudHelper.updateVal(`sleeve${i}StrDef`,`${ns.nFormat(stat.strength,"0,0")}/${ns.nFormat(stat.defense,"0,0")}`),hudHelper.updateVal(`sleeve${i}DexAgi`,`${ns.nFormat(stat.dexterity,"0,0")}/${ns.nFormat(stat.agility,"0,0")}`),hudHelper.updateVal(`sleeve${i}Cha`,`${ns.nFormat(stat.charisma,"0,0")}`)}let mxRm=ns.getServerMaxRam("home"),usRm=ns.getServerUsedRam("home"),pcRm=usRm/mxRm*100,pdf=2.27272727272727,dpb=Math.floor(pcRm/pdf);hudHelper.updateVal("srvHome",ProgressBar(44,dpb,FiraBar)),hudHelper.tooltip.setElementTooltip("ovv-srvHome",hudHelper.tooltip.createObject(`<b>Ram: ${ns.nFormat(ns.getServerUsedRam("home"),"0,0")} / ${ns.nFormat(ns.getServerMaxRam("home"),"0,0")}</b><br>Cores: ${ns.getServer("home").cpuCores}`),doneEL);for(let i=0;i<=srvs.length-1;i++){srvs[i].replace("hacknet-node","HKN");let mxRm=ns.getServerMaxRam(srvs[i]),usRm=ns.getServerUsedRam(srvs[i]),pcRm=usRm/mxRm*100,pdf=2.27272727272727,dpb=Math.floor(pcRm/pdf);hudHelper.updateVal(`srv${i}`,ProgressBar(44,dpb,FiraBar)),hudHelper.tooltip.setElementTooltip(`ovv-srv${i}`,hudHelper.tooltip.createObject(`<b>Ram: ${ns.nFormat(ns.getServerUsedRam(srvs[i]),"0,0")} / ${ns.nFormat(ns.getServerMaxRam(srvs[i]),"0,0")}</b><br>Cores: ${ns.getServer(srvs[i]).cpuCores}`),doneEL)}hudHelper.updateVal("playTimeBN",ns.tFormat(ply.playtimeSinceLastBitnode)),hudHelper.updateVal("playTimeTotal",ns.tFormat(ply.totalPlaytime));let wdl=3e3*ns.getBitNodeMultipliers().WorldDaemonDifficulty;hudHelper.updateVal("daedalusReqHak",`Hacking Exp: ${ns.nFormat(formulaHelper.getExpReq(ns,"hacking",2500,sf5),"0,0")}`),hudHelper.updateVal("daedalusReqStr",`Strength Exp: ${ns.nFormat(formulaHelper.getExpReq(ns,"strength",1500,sf5),"0,0")}`),hudHelper.updateVal("daedalusReqDef",`Defense Exp: ${ns.nFormat(formulaHelper.getExpReq(ns,"defense",1500,sf5),"0,0")}`),hudHelper.updateVal("daedalusReqDex",`Dexterity Exp: ${ns.nFormat(formulaHelper.getExpReq(ns,"dexterity",1500,sf5),"0,0")}`),hudHelper.updateVal("daedalusReqAgi",`Agility Exp: ${ns.nFormat(formulaHelper.getExpReq(ns,"agility",1500,sf5),"0,0")}`),hudHelper.tooltip.setElementTooltip("worldDaemonRq",hudHelper.tooltip.createObject(`Hack Req: ${wdl}`),doneEL),hudHelper.updateVal("worldDaemonRq",`You need ${ns.nFormat(formulaHelper.getExpReq(ns,"hacking",wdl,sf5),"0,0")} exp.`)}catch(err){ns.print("ERROR: Update Skipped: "+String(err))}await ns.sleep(100)}}